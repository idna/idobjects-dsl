«IMPORT idObjectsDsl»
«EXTENSION  util»

«DEFINE Entity FOR Entity»
	«FILE mdClassFileName()»
			
		package «packageName()»;
		
		«FOREACH importsMD() AS import»
			import «import»;
		«ENDFOREACH»

		
		public final class «name»MD extends IdObjectMD{

			«EXPAND Property FOREACH  properties»
		
			«EXPAND Reference FOREACH  references»
		
			public static final List<IdObjectPropertyMD> PROPERTIES;
	    	public static final List<IdObjectReferenceMD> REFERENCES;
	
	    	static{
		        List<IdObjectPropertyMD> properties = new ArrayList<IdObjectPropertyMD>();
		        
		        «FOREACH properties AS p»
		        properties.add( «staticName(p)» );
		        «ENDFOREACH» 
		        
		        PROPERTIES = Collections.unmodifiableList( properties );
		
		        List<IdObjectReferenceMD> references = new ArrayList<IdObjectReferenceMD>();
		        
		        «FOREACH references AS r»
		        references.add( «staticName(r)» );
		        «ENDFOREACH» 
		        
		        REFERENCES = Collections.unmodifiableList( references );
	    	}
	    	
	    	
	   	    private static final «name»MD instance = new «name»MD();

		    public static final «name»MD instance(){
		        return instance;
		    }
		
		    private «name»MD(){
		        super( «name».class.getName(), PROPERTIES, REFERENCES );
		    }
		
		}  
	
	«ENDFILE»
«ENDDEFINE»



«DEFINE Reference FOR EntityReference»
	  public static final IdObjectReferenceMD «staticName()» = new IdObjectReferenceMD( «entityName()»MD.class, «destinationName()»MD.class, "«name»", "«inverseName()»",«hasInverse()» , ReferenceType.«referenceType()»,
            null );

«ENDDEFINE»

«DEFINE Property FOR EntityProperty»

    public static final IdObjectPropertyMD «staticName()» = new IdObjectPropertyMD("«name»", «propertyTypeClass()»);

«ENDDEFINE»
