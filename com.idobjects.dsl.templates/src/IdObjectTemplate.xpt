«IMPORT idObjectsDsl»
«EXTENSION  util»

«DEFINE Entity FOR Entity»
	«FILE classFileName()»
			
		package «packageName()»;
		
		import java.util.Collection;
		import java.util.List;
		
		import com.idobjects.api.AbstractIdObject;
		import com.idobjects.api.ModelScope;
		import com.idobjects.api.ObjectIdentifier;
		
		
		public class «name» extends AbstractIdObject {
	
		public «name»(ModelScope modelScope, ObjectIdentifier objectId) {
			super(modelScope, objectId);
		}
		
		
		«EXPAND getAndSetProperties FOREACH  properties»

		«EXPAND getAndSetReferences FOREACH  references»
		
		}  
	
	«ENDFILE»
«ENDDEFINE»

«DEFINE getAndSetProperties FOR EntityProperty»
	
	public void «setterName()»(«propertyType()» «propertyName()») {
		 setPropertyValue( «entityName()»MD.«staticName()», «propertyName()» );
	}
	
	public «propertyType()» «getterName()»() {
		return («propertyCastType()») getPropertyValue( «entityName()»MD.«staticName()» );	
	}

«REM» 	
	public void «removeName()»()  {
		removePropertyValue( «entityName()»MD.«staticName()» );
	}
«ENDREM»

«ENDDEFINE»

«DEFINE getAndSetReferences FOR EntityReference»

	«IF isListReference() »
	
		public void «addName()»( «destinationName()» toAdd)  {
			addReference( «entityName()»MD.«staticName()» ,toAdd);
		}
		
		public void «addNameCollection()» (Collection<? extends «destinationName()» > toAdd) {
			addReferences( «entityName()»MD.«staticName()» ,toAdd);
		}
		
		public void «removeName()» ( «destinationName()» toRemove){
			removeReference(  «entityName()»MD.«staticName()», toRemove);
		}
		
		public void «removeNameCollection()» ( Collection< ? extends «destinationName()»> toRemove){
			removeReferences(  «entityName()»MD.«staticName()», toRemove);
		}
		
		public List< «destinationName()» > «getterName()» (){
		  return getCastedReferences( «entityName()»MD.«staticName()», «destinationName()».class );
		}

	«ELSE»
		public void «setterName()» ( «destinationName()» «name» ) {
			addReference( «entityName()»MD.«staticName()» ,«name»);
		}
		
		public void  «removeName()» () {
			removeReference(  «entityName()»MD.«staticName()»);
		}
		
		public «destinationName()»  «getterName()» (){
		 return (  «destinationName()» )getSingleReference(  «entityName()»MD.«staticName()» );
		}
		
		 
	«ENDIF»
	

«ENDDEFINE»
