/*
* generated by Xtext
*/
package com.idobjects.dsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.idobjects.dsl.services.IdObjectsDslGrammarAccess;

public class IdObjectsDslParser extends AbstractContentAssistParser {
	
	@Inject
	private IdObjectsDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.idobjects.dsl.ui.contentassist.antlr.internal.InternalIdObjectsDslParser createParser() {
		com.idobjects.dsl.ui.contentassist.antlr.internal.InternalIdObjectsDslParser result = new com.idobjects.dsl.ui.contentassist.antlr.internal.InternalIdObjectsDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEntityAccess().getAlternatives_3(), "rule__Entity__Alternatives_3");
					put(grammarAccess.getEntityReferenceAccess().getAlternatives_0(), "rule__EntityReference__Alternatives_0");
					put(grammarAccess.getBasicTypeAccess().getAlternatives(), "rule__BasicType__Alternatives");
					put(grammarAccess.getJodaTimeTypesAccess().getAlternatives(), "rule__JodaTimeTypes__Alternatives");
					put(grammarAccess.getWrapperTypesAccess().getAlternatives(), "rule__WrapperTypes__Alternatives");
					put(grammarAccess.getPrimitiveTypesAccess().getAlternatives(), "rule__PrimitiveTypes__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getPackageAccess().getGroup(), "rule__Package__Group__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getEntityReferenceAccess().getGroup(), "rule__EntityReference__Group__0");
					put(grammarAccess.getEntityReferenceAccess().getGroup_0_0(), "rule__EntityReference__Group_0_0__0");
					put(grammarAccess.getEntityReferenceAccess().getGroup_2(), "rule__EntityReference__Group_2__0");
					put(grammarAccess.getPersistenceAccess().getGroup(), "rule__Persistence__Group__0");
					put(grammarAccess.getPersistencePackageAccess().getGroup(), "rule__PersistencePackage__Group__0");
					put(grammarAccess.getPersistenceEntityAccess().getGroup(), "rule__PersistenceEntity__Group__0");
					put(grammarAccess.getPersistencePropertyAccess().getGroup(), "rule__PersistenceProperty__Group__0");
					put(grammarAccess.getPersistencePropertyAccess().getGroup_3(), "rule__PersistenceProperty__Group_3__0");
					put(grammarAccess.getPersistencePropertyConfigAccess().getGroup(), "rule__PersistencePropertyConfig__Group__0");
					put(grammarAccess.getEntityPropertyAccess().getGroup(), "rule__EntityProperty__Group__0");
					put(grammarAccess.getPackageNameAccess().getGroup(), "rule__PackageName__Group__0");
					put(grammarAccess.getPackageNameAccess().getGroup_1(), "rule__PackageName__Group_1__0");
					put(grammarAccess.getModelAccess().getNameAssignment_2(), "rule__Model__NameAssignment_2");
					put(grammarAccess.getModelAccess().getPackagesAssignment_3(), "rule__Model__PackagesAssignment_3");
					put(grammarAccess.getModelAccess().getPersistenceModelAssignment_4(), "rule__Model__PersistenceModelAssignment_4");
					put(grammarAccess.getPackageAccess().getNameAssignment_1(), "rule__Package__NameAssignment_1");
					put(grammarAccess.getPackageAccess().getEntitiesAssignment_3(), "rule__Package__EntitiesAssignment_3");
					put(grammarAccess.getEntityAccess().getNameAssignment_1(), "rule__Entity__NameAssignment_1");
					put(grammarAccess.getEntityAccess().getPropertiesAssignment_3_0(), "rule__Entity__PropertiesAssignment_3_0");
					put(grammarAccess.getEntityAccess().getReferencesAssignment_3_1(), "rule__Entity__ReferencesAssignment_3_1");
					put(grammarAccess.getEntityReferenceAccess().getListDestinationAssignment_0_0_1(), "rule__EntityReference__ListDestinationAssignment_0_0_1");
					put(grammarAccess.getEntityReferenceAccess().getSingleDestinationAssignment_0_1(), "rule__EntityReference__SingleDestinationAssignment_0_1");
					put(grammarAccess.getEntityReferenceAccess().getNameAssignment_1(), "rule__EntityReference__NameAssignment_1");
					put(grammarAccess.getEntityReferenceAccess().getInverseNameAssignment_2_1(), "rule__EntityReference__InverseNameAssignment_2_1");
					put(grammarAccess.getPersistenceAccess().getPersistencePackageAssignment_2(), "rule__Persistence__PersistencePackageAssignment_2");
					put(grammarAccess.getPersistencePackageAccess().getNameAssignment_1(), "rule__PersistencePackage__NameAssignment_1");
					put(grammarAccess.getPersistencePackageAccess().getPersistenceEntitiesAssignment_3(), "rule__PersistencePackage__PersistenceEntitiesAssignment_3");
					put(grammarAccess.getPersistenceEntityAccess().getNameAssignment_1(), "rule__PersistenceEntity__NameAssignment_1");
					put(grammarAccess.getPersistenceEntityAccess().getPersistencePropertiesAssignment_3(), "rule__PersistenceEntity__PersistencePropertiesAssignment_3");
					put(grammarAccess.getPersistencePropertyAccess().getNameAssignment_0(), "rule__PersistenceProperty__NameAssignment_0");
					put(grammarAccess.getPersistencePropertyAccess().getConfigAssignment_2(), "rule__PersistenceProperty__ConfigAssignment_2");
					put(grammarAccess.getPersistencePropertyAccess().getConfigAssignment_3_1(), "rule__PersistenceProperty__ConfigAssignment_3_1");
					put(grammarAccess.getPersistencePropertyConfigAccess().getPropertyConfigKeyAssignment_0(), "rule__PersistencePropertyConfig__PropertyConfigKeyAssignment_0");
					put(grammarAccess.getPersistencePropertyConfigAccess().getPropertyConfigValueAssignment_2(), "rule__PersistencePropertyConfig__PropertyConfigValueAssignment_2");
					put(grammarAccess.getEntityPropertyAccess().getPropertyTypeAssignment_0(), "rule__EntityProperty__PropertyTypeAssignment_0");
					put(grammarAccess.getEntityPropertyAccess().getNameAssignment_1(), "rule__EntityProperty__NameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.idobjects.dsl.ui.contentassist.antlr.internal.InternalIdObjectsDslParser typedParser = (com.idobjects.dsl.ui.contentassist.antlr.internal.InternalIdObjectsDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public IdObjectsDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(IdObjectsDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
